name: CI â€¢ Build & Publish

on:
  push:
    branches: [ "master", "main" ]
  pull_request:

jobs:
  build-test:
    name: Lint/Build (Node + Python)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ---------- Backend (Python) ----------
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install backend deps
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Backend smoke import
        working-directory: backend
        run: |
          python - <<'PY'
          import importlib
          importlib.import_module("app.main")
          print("Backend import OK")
          PY

      # ---------- Frontend (Node) ----------
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend deps
        working-directory: frontend
        run: npm ci

      - name: Build frontend
        working-directory: frontend
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: |
            frontend/.next
            frontend/next.config.js
            frontend/public
          retention-days: 7

  docker:
    name: Docker (GHCR)
    runs-on: ubuntu-latest
    needs: build-test
    if: github.event_name == 'push' # only push images on branch pushes

    permissions:
      contents: read
      packages: write  # needed for GHCR
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Backend meta
        id: meta_backend
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/manga-reader-backend
          tags: |
            type=ref,event=branch
            type=sha

      - name: Build & push backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          provenance: false
          platforms: linux/amd64
          tags: ${{ steps.meta_backend.outputs.tags }}
          labels: ${{ steps.meta_backend.outputs.labels }}

      - name: Frontend meta
        id: meta_frontend
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/manga-reader-frontend
          tags: |
            type=ref,event=branch
            type=sha

      - name: Build & push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          provenance: false
          platforms: linux/amd64
          tags: ${{ steps.meta_frontend.outputs.tags }}
          labels: ${{ steps.meta_frontend.outputs.labels }}
